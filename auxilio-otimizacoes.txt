--PARTE DAS OTIMIzações
--LINK - HTTPS://WWW.YOUTUBE.COM/WATCH?V=RTIQPOKWZ_O&INDEX=3&LIST=PLNNEM4DEC9TMYYSSSY2JPHWKAIYKDR5TC

--O QUE são ÍNDICES??
--NO CONTEXTO DA ESTRUTURA DE DADOS:
--TRATA SE DE UMA REFER�NCIA ASSOCIADA
--A UMA CHAVE.ÉUTILIZADA PARA FINS DE OTIMIZAÇÃO DE CONSULTAS, POIS PERMITE
--A LOCALIZAÇÃO MAIS R�PIDA DE UM REGISTRO.
--NO CONTEXTO DE BANCO DE DADOS:
--TRATA SE DE UMA ESTRUTURA (OU ARQUIVO)
--AUXILIAR ASSOCIADO A UMA TABELA (OU COLEÇÃO DE DADOS). POSSUI A FUNÇÃO DE
--ACELERAR O TEMPO DE ACESSO �S LINHAS DE UMA TABELA.
--
--
--TIPOS DE ÍNDICES
--EXISTEM QUATRO TIPOS B�SICO DE ÍNDICES:
--� COMPOSTOS MAIS DE UMA COLUNA DA TABELA SENDO UTILIZADA;
--� SIMPLES APENAS UMA COLUNA DA TABELA SENDO UTILIZADA;
--� INTERNOS DENTRO DA ESTRUTURA DE DADOS DA TABELA;
--� EXTERNOS FAZ REFER�NCIA FORA DA TABELA
--
--
--A UTILIZAÇÃO DE ÍNDICESÉINDICADA PARA QUE HAJA UM MENOR CONSUMO E
--RETORNO MAIS R�PIDO DO SERVIDOR PARA A APLICAÇÃO EM QUEST�O. RESUMINDO,
--ELES SERVEM PARA PROPORCIONAR:
--� AGILIDADE E PERFORMANCE EM BUSCAS;
--� MENOR CONSUMO DE RECURSOS (INPUT E OUTPUT DE DISCO), POIS CONSOME
--MENOS RECURSO DO SERVIDOR, PROCESSAMENTO E MEM�RIA, AL�M DE TRAZER
--RETORNO PARA A APLICAÇÃO DE FORMA MAIS R�PIDA.
--INPUT
--E OUTPUT (LEITURA E GRAVAÇÃO EM DISCO PARA CADA BUSCA REALIZADA
--NO SERVIDOR DE BANCO DE DADOS, CASO AQUELE DADO ESTEJA EM MEM�RIA
--(CACHE),ÉNECESS�RIO REALIZAR UMA BUSCA DIRETAMENTE NO DISCO. ESSAS
--BUSCAS TEM UM ALTO N�VEL DE PROCESSAMENTO.
--
--OS ÍNDICES DEVEM SER UTILIZADOS SEMPRE QUE HOUVER UM
--GRANDE N�MERO DE PESQUISAS SOBRE DETERMINADO ITEM, AFIM
--DE OTIMIZAR AS BUSCAS E MELHORAR A PERFORMANCE.

        
--AGORA VAMOS APRENDER A CRIAR UM �NDICE SIMPLES. PARA ISSO, CRIAMOS UMA
--TABELA (�PRODUTOS�), ADICIONANDO UM �NDICE PARA O CAMPO NOME, ATRAV�S DO
--COMANDO  -- INDEX IDX_NOME (NOME);

        
--CREATE TABLE PRODUTOS(
--CODIGO INT,
--NOME VARCHAR(50),
--KEY CODIGO CODIGO
--INDEX IDX_NOME (NOME)
--);
--O �NDICE ( IDX_NOME ) REFERENCIA O CAMPO NOME, UTILIZANDO O CAMPO COMPLETO COMO �NDICE. PARA
--VISUALIZAR OS ÍNDICES DE UMA TABELA, VOC� PODE UTILIZAR O COMANDO �SHOW INDEXES" A PARTIR
--DA TABELA RECÉM CRIADA, VAMOS PARA O PROMPT E ESCREVEMOS O COMANDO:
--
--SHOW INDEXES FROM PRODUTOS;

--
--ADICIONANDO ÍNDICES A
--TABELAS EXISTENTES
--�
--IMPORTANTE QUE O BANCO DE DADOS SEJA PLANEJADO PARA A OTIMIZAÇÃO
--DE CERTAS BUSCAS. CASO CONTR�RIO, NO MOMENTO EM QUE AS APLICA��ES
--NECESSITAREM CONSUMIR MAIS DADOS DO BANCO, PODEREMOS TER
--PROBLEMAS NA PERFORMANCE . EM UMA SITUAÇÃO COMUM, N�O TER�AMOS
--ÍNDICES NA ESTRUTURA INICIAL DA TABELA. POR ISSO, VAMOS CRIAR NOVAMENTE
--A TABELA �PRODUTOS� SEM ADICIONAR ÍNDICES.
--
--CREATE TABLE PRODUTOS (
--CODIGO INT,
--NOME VARCHAR(50),
--KEY CODIGO (CODIGO)
--);

--        
--QUANDO PERCEBEMOS QUE A APLICAÇÃO EST� PERDENDO PERFORMANCE, POIS sãoFEITAS MUITAS
--REQUISI��ES DE BUSCA PELO NOME DOS PRODUTOS, PODEMOS RESOLVER O PROBLEMA ATRAV�S DE
--UM �NDICE PARA O CAMPO �NOME�. PARA ADICIONAR UM �NDICE EM UMA TABELA J� CRIADA, VAMOS
--UTILIZAR O SEGUINTE COMANDO:
--
--CREATE INDEX IDX_NOME ON PRODUTOS(NOME);

        
        
--PARTICIONAMENTO DE TABELA;
--OS ÍNDICES AUXILIAM EM CONSULTAS E
--SUBCONSULTAS , POR�M QUANDO A TABELA POSSUI UM
--GRANDE VOLUME DE DADOS, O DESEMPENHO DO BANCO DE DADOS CONTINUA PREJUDICADO.
--PARA RESOLVER ESTE PROBLEMA, O
--PARTICIONAMENTO DE TABELAS, OU SEJA, A DIVIsãoDE UMA
--TABELA INTEIRA EM SUB TABELAS MENORES, TORNA SE A SOLUÇÃO IDEAL. A GROSSO MODO,
--ESTAMOS QUEBRANDO TABELAS EM SUB TABELAS, OU SEJA, PARTICIONANDO.

--        PARTICIONAMENTO
--DADOS E ÍNDICES sãoARMAZENADOS EM
--M�LTIPLOS ARQUIVOS, 1 POR PARTIÇÃO.
--N�MERO M�XIMO DE PARTI��ES: 1024
--(ISTOÉDEFINIÇÃO DO MYSQL).

--        
--QUAIS AS VANTAGENS? 
--A APLICAÇÃO PERMANECE IGUAL!
--NA APLICAÇÃO, NADA MUDA. A TABELA CONTINUAR� SENDO VISTA COMO UMA TABELA �NICA.
--MAIS DADOS EM UMA �NICA TABELA
--DEPENDENDO
--DO SISTEMA DE ARQUIVOS UTILIZADO PELO SERVIDOR MYSQL, H� UM LIMITE
--M�XIMO DE TAMANHO DE ARQUIVO, O QUE LIMITA A QUANTIDADE DE DADOS QUE PODEM SER
--INSERIDOS EM UMA TABELA. UTILIZANDO O PARTICIONAMENTO , PARTIMOS A TABELA EM M�LTIPLOS
--ARQUIVOS, AUMENTANDO ASSIM O LIMITE M�XIMO DE DADOS QUE PODEM SER INSERIDOS NESSA
--TABELA. EM SISTEMAS DE ARQUIVO MODERNOS, ESSE LIMITEÉMUITO ALTO, MAS AINDA ASSIM, �
--UMA VANTAGEM.

REMOÇÃO DE DADOS ABSOLETOS DEPENDENDO DO PARTICIONAMENTO UTILIZADO, A REMOÇÃO DE DADOS OBSOLETOSÉFACILITADA.
ESTA VANTAGEMÉMAIS F�CIL DE EXPLICAR UTILIZANDO O EXEMPLO ABAIXO.
PENSE EM UMA ESCOLA, ONDE TODAS AS MATR�CULAS ENCONTRAM SE EM UMA �NICA TABELA.
NESTE CASO, PODER�AMOS PARTICIONAR ESTA TABELA �NICA PELO ANO DE MATRICULA, GERANDO
DIVERSAS OUTRAS SUB TABELAS . PORTANTO, CASO N�O HOUVESSE MAIS O INTERESSE POR UM
DETERMINADO ANO DE MATR�CULA, A REMOÇÃO PODERIA SER APLICADA ESPECIFICAMENTE
NAQUELE ANO DE INTERESSE. DESTA FORMA, REMOVENDO OS DADOS ABSOLETOS

--
--DESEMPENHO DE BUSCAS OTIMIZADO
--O DESEMPENHO DE BUSCASÉOTIMIZADO, POIS DIMINUI O UNIVERSO NO QUAL ELAS REALIZADAS.
--ANTES A BUSCA ERA REALIZADA BASEANDO SE EM UM UNIVERSO ENORME DE DADOS DE UMA
--TABELA, AGORA A BUSCA BASEIA SE EM APENAS UMA FRAÇÃO DESTE UNIVERSO, BEM MENOR E SUBDIVIDIDO.        
--        

